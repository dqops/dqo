<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright Â© 2021 DQO.ai (support@dqo.ai)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ai.dqo</groupId>
	<artifactId>dqo-dqoai</artifactId>
	<version>0.1.0</version>
	<packaging>jar</packaging>
	<name>dqo-dqoai</name>
	<description>Dqo Data Quality Observer</description>
	<properties>
		<java.version>15</java.version>
		<tablesaw.version>0.42.0</tablesaw.version>
		<license.licenseName>apache_v2</license.licenseName>
	</properties>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>8.30</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<encoding>UTF-8</encoding>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<organization>
		<name>Documati</name>
		<url>https://dqo.ai/</url>
	</organization>

	<inceptionYear>2021</inceptionYear>

	<profiles>
		<profile>
			<id>integration-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.22.2</version>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>none</exclude>
									</excludes>
									<includes>
										<include>**/*IntegrationTest</include>
										<include>**/*IntegrationTests</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>publish-yaml-dev-schema</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<executable>gsutil</executable>
							<mainClass>none</mainClass>
							<arguments>
								<argument>-m</argument>
								<argument>cp</argument>
								<argument>${project.basedir}/src/main/resources/schemas/*.json</argument>
								<argument>gs://dqo-ai-dev-yaml-schemas/yaml</argument>
							</arguments>
						</configuration>
						<executions>
							<execution>
								<id>upload-yaml-schemata</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build-with-jdk-11</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<java.version>11</java.version>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.22.2</version>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.8.1</version>
						<executions>
							<execution>
								<id>default-testCompile</id>
								<phase>test-compile</phase>
								<goals>
									<goal>testCompile</goal>
								</goals>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.google.cloud</groupId>-->
<!--			<artifactId>spring-cloud-gcp-starter-secretmanager</artifactId>-->
<!--			<version>3.1.0</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.13.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>2.13.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>2.13.2</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-blackbird</artifactId>
			<version>2.13.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli-spring-boot-starter</artifactId>
			<version>4.6.3</version>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli-shell-jline3</artifactId>
			<version>4.6.3</version>
		</dependency>
		<dependency>
			<groupId>org.jline</groupId>
			<artifactId>jline</artifactId>
			<version>3.21.0</version>
		</dependency>
		<dependency>
			<groupId>org.jline</groupId>
			<artifactId>jline-console</artifactId>
			<version>3.21.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.1-jre</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell-starter</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.shell</groupId>
			<artifactId>spring-shell-table</artifactId>
			<version>2.0.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<version>5.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.fusesource.jansi</groupId>
			<artifactId>jansi</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-bigquery</artifactId>
			<version>2.9.3</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-storage</artifactId>
			<version>2.4.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-secretmanager</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>tech.tablesaw</groupId>
			<artifactId>tablesaw-core</artifactId>
			<version>${tablesaw.version}</version>
		</dependency>
		<dependency>
			<groupId>net.tlabs-data</groupId>
			<artifactId>tablesaw_${tablesaw.version}-parquet</artifactId>
			<version>0.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.victools</groupId>
			<artifactId>jsonschema-module-jackson</artifactId>
			<version>4.22.0</version>
		</dependency>
		<dependency>
			<groupId>io.github.kostaskougios</groupId>
			<artifactId>cloning</artifactId>
			<version>1.10.3</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>5.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.36</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.17.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-common</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-encoding</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-column</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-hadoop</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>2.17.2</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.6.5</version>
		</dependency>

		<!-- JDBC driver dependencies, make sure that they are the same as those in the lib/pom.xml file, because they are distributed in a separate folder -->
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>jcc</artifactId>
			<version>11.5.7.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.28</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>2.7.3</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.3.3</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.amazon.redshift</groupId>
			<artifactId>redshift-jdbc42</artifactId>
			<version>2.1.0.4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>10.2.0.jre11</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>net.snowflake</groupId>
			<artifactId>snowflake-jdbc</artifactId>
			<version>3.13.14</version>
			<scope>runtime</scope>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-common</artifactId>
			<version>1.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.api</groupId>
			<artifactId>gax</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.6.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<argLine>--add-opens java.base/java.nio=ALL-UNNAMED -XX:-MaxFDLimit</argLine>  <!-- Fixes an issue with snowflake on JDK 17, see: https://github.com/snowflakedb/snowflake-jdbc/issues/589#issuecomment-983944767 -->
					<environmentVariables>
						<!-- Remember to restart IntelliJ when any environment variables are modified, they are loaded only once -->
						<DQO_HOME>${project.basedir}/../home</DQO_HOME>
						<DQO_USER_HOME>${project.build.directory}/test-user-home</DQO_USER_HOME>
						<DQO_TEST_TEMPORARY_FOLDER>${project.build.directory}</DQO_TEST_TEMPORARY_FOLDER>
						<SAMPLE_DATA_FOLDER>${project.basedir}/sampledata/</SAMPLE_DATA_FOLDER>
						<HADOOP_HOME>${project.basedir}/../home</HADOOP_HOME>
					</environmentVariables>
					<enableAssertions>true</enableAssertions>
					<excludes>
						<exclude>**/*IntegrationTest</exclude>
						<exclude>**/*IntegrationTests</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.4.26</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>https://cloud.dqo.ai/api-dqo-cloud-swagger.yaml</inputSpec>
							<language>java</language>
							<library>resttemplate</library>
							<apiPackage>ai.dqo.cloud.rest.api</apiPackage>
							<modelPackage>ai.dqo.cloud.rest.model</modelPackage>
							<invokerPackage>ai.dqo.cloud.rest.handler</invokerPackage>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateSupportingFiles>true</generateSupportingFiles>
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<interfaceOnly>true</interfaceOnly>
								<dateLibrary>java8</dateLibrary>
								<java8>true</java8>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>add-generated-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/swagger/src/main/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/integration-test/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/integration-test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.victools</groupId>
				<artifactId>jsonschema-maven-plugin</artifactId>
				<version>4.22.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<classNames>ai/dqo/metadata/storage/localfiles/**Yaml</classNames>
					<schemaFilePath>src/main/resources/schemas</schemaFilePath>
					<schemaVersion>DRAFT_7</schemaVersion>
					<options>
						<enabled>
							<option>FORBIDDEN_ADDITIONAL_PROPERTIES_BY_DEFAULT</option>
							<option>MAP_VALUES_AS_ADDITIONAL_PROPERTIES</option>
							<option>ENUM_KEYWORD_FOR_SINGLE_VALUES</option>
							<option>DEFINITIONS_FOR_ALL_OBJECTS</option>
						</enabled>
						<disabled>SCHEMA_VERSION_INDICATOR</disabled>
					</options>
					<modules>
						<module>
							<name>Jackson</name>
							<options>
								<option>FLATTENED_ENUMS_FROM_JSONPROPERTY</option>
							</options>
						</module>
					</modules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>4.1</version>
				<configuration>
					<properties>
						<owner>DQO.ai</owner>
						<email>support@dqo.ai</email>
					</properties>
					<licenseSets>
						<licenseSet>
							<header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
							<excludes>
								<exclude>**/README</exclude>
								<exclude>src/test/resources/**</exclude>
								<exclude>src/main/resources/**</exclude>
								<exclude>src/integration-test/resources/**</exclude>
								<exclude>src/integration-test/credentials/**</exclude>
							</excludes>
						</licenseSet>
					</licenseSets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
