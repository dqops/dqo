**{{replace primaryCheckName "_" " "}}** checks{{#with "  "}}{{.}}{{/with}}
{{#if checkSpecClassJavaDoc}}
**Description**{{#with "  "}}{{.}}{{/with}}
{{checkSpecClassJavaDoc}}
{{else}}
{{/if}}
___
{{#each allChecks}}
## **{{replace checkName  "_" " "}}**{{#with "  "}}{{.}}{{/with}}
{{#with "  "}}{{.}}{{/with}}
**Check description**{{#with "  "}}{{.}}{{/with}}
{{checkHelp}}{{#with "  "}}{{.}}{{/with}}
{{#with "  "}}{{.}}{{/with}}
|Check name|Check type|Time scale|Sensor definition|Quality rule|
|----------|----------|----------|-----------|-------------|
|{{checkName}}|{{checkType}}|{{#if timeScale}}{{timeScale}}{{else}} {{/if}}|[{{sensor.sensorName}}](../../../../reference/sensors/{{capitalizeFirst target}}/{{sensor.category}}-{{target}}-sensors/#{{replace sensor.sensorName "_" "-"}})|[{{rule.ruleName}}](../../../../reference/rules/{{capitalizeFirst rule.category}}/#{{replace rule.ruleName "_" "-"}})|
{{#with "  "}}{{.}}{{/with}}
**Enable check (Shell)**{{#with "  "}}{{.}}{{/with}}
To enable this check provide connection name and check name in [check enable command](../../../../command_line_interface/check/#dqo-check-enable)
```
dqo> check enable -c=connection_name -ch={{checkName}}
```
**Run check (Shell)**{{#with "  "}}{{.}}{{/with}}
To run this check provide check name in [check run command](../../../../command_line_interface/check/#dqo-check-run)
```
dqo> check run -ch={{checkName}}
```
It is also possible to run this check on a specific connection. In order to do this, add the connection name to the below
```
dqo> check run -c=connection_name -ch={{checkName}}
```
It is additionally feasible to run this check on a specific table. In order to do this, add the table name to the below
```
dqo> check run -c=connection_name -t=table_name -ch={{checkName}}
```
It is furthermore viable to combine run this check on a specific column. In order to do this, add the column name to the below
```
dqo> check run -c=connection_name -t=table_name -col=column_name -ch={{checkName}}
```
**Check structure (Yaml)**
```yaml
{{#each checkSample~}}
{{{this}}}
{{/each~}}
```
**Sample configuration (Yaml)**{{#with "  "}}{{.}}{{/with}}
```yaml hl_lines="{{checkSampleBeginLine}}-{{checkSampleEndLine}}"
{{{sampleYaml}}}
```
{{#each providerTemplates~}}
### **{{{providerTypeModel.providerTypeDisplayName}}}**
=== "Sensor template for {{{providerTypeModel.providerTypeDisplayName}}}"
    {{#with "  "}}{{.}}{{/with}}
    ```sql+jinja
    {{#each listOfJinjaTemplate~}}
    {{{this}}}
    {{/each~}}
    ```
=== "Rendered SQL for {{{providerTypeModel.providerTypeDisplayName}}}"
    {{#with "  "}}{{.}}{{/with}}
    ```sql
    {{#each listOfRenderedTemplate~}}
    {{{this}}}
    {{/each~}}
    ```
{{/each~}}
### **Configuration with a data stream segmentation**{{#with "  "}}{{.}}{{/with}}
??? info "Click to see more"{{#with "  "}}{{.}}{{/with}}
    **Sample configuration (Yaml)**{{#with "  "}}{{.}}{{/with}}
    ```yaml hl_lines="{{firstSectionBeginMarker}}-{{firstSectionEndMarker}} {{secondSectionBeginMarker}}-{{secondSectionEndMarker}}"
    {{#each splitSampleYamlWithDataStreams~}}
    {{{this}}}
    {{/each~}}
    ```{{#with "  "}}{{.}}{{/with}}
    {{#each providerTemplatesDataStreams~}}
    **{{{providerTypeModel.providerTypeDisplayName}}}**{{#with "  "}}{{.}}{{/with}}
    {{#with "  "}}{{.}}{{/with}}
    === "Sensor template for {{{providerTypeModel.providerTypeDisplayName}}}"
        ```sql+jinja
        {{#each listOfJinjaTemplate~}}
        {{{this}}}
        {{/each~}}
        ```
    === "Rendered SQL for {{{providerTypeModel.providerTypeDisplayName}}}"
        ```sql
        {{#each listOfRenderedTemplate~}}
        {{{this}}}
        {{/each~}}
        ```
    {{/each~}}
{{#if runOnConnectionCliCommand}}
**CLI command to run check on connection**{{#with "  "}}{{.}}{{/with}}
```
{{runOnConnectionCliCommand}}
```
{{else}}
{{/if}}
{{#if runOnTableCliCommand}}
**CLI command to run check on table**{{#with "  "}}{{.}}{{/with}}
```
{{runOnTableCliCommand}}
```
{{else}}
{{/if}}
{{#if runOnColumnCliCommand}}
**CLI command to run check on column**{{#with "  "}}{{.}}{{/with}}
```
{{runOnColumnCliCommand}}
```
{{else}}
{{/if}}
___
{{/each}}