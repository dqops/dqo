{% import '/dialects/oracle.sql.jinja2' as lib with context -%}

{%- macro render_referenced_table(referenced_table) -%}
{%- if referenced_table.find(".") < 0 -%}
   {{- lib.quote_identifier(referenced_table) -}}
{%- else -%}
   {{ referenced_table }}
{%- endif -%}
{%- endmacro -%}

SELECT
    (SELECT
        COUNT(referenced_table.{{ lib.quote_identifier(parameters.referenced_column) }})
    FROM {{ render_referenced_table(parameters.referenced_table) }} referenced_table
    ) AS expected_value,
    analyzed_table.actual_value
FROM (SELECT
        COUNT({{ lib.render_target_column('original_table')}}) AS actual_value
    FROM {{ lib.render_target_table() }} original_table
    {{- lib.render_where_clause() -}} ) analyzed_table
GROUP BY actual_value