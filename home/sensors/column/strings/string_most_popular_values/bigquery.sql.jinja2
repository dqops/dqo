{% import '/dialects/bigquery.sql.jinja2' as lib with context -%}

{%- macro extract_in_list(values_list) -%}
    {%- for i in values_list -%}
        {%- if not loop.last -%}
            {{lib.make_text_constant(i)}}{{", "}}
        {%- else -%}
            {{lib.make_text_constant(i)}}
        {%- endif -%}
    {%- endfor -%}
{% endmacro -%}

{%- macro top_value() -%}
    {%- if 'values' not in parameters or parameters['values']|length == 0 -%}
    NULL
    {%- else -%}
    SUM(
        CASE
            WHEN top_values IN ({{ extract_in_list({{parameters['values']}}) }}) THEN 1
            ELSE 0
        END
    ) AS actual_value,
    time_period
    {%- endif -%}
{% endmacro -%}

{%- macro top_value() -%}
(
    SELECT
        top_col_values.top_values as top_values,
        top_col_values.time_period as time_period,
        {{- lib.render_data_stream_projections('top_col_values') }}
        RANK() OVER(partition by top_col_values.time_period
        {{- lib.render_data_stream_projections('top_col_values') }}
        ORDER BY top_col_values.ct) as rg
    FROM (
           SELECT
            {{ lib.render_target_column('analyzed_table') }} AS top_values,
            COUNT(*) AS ct
            {{- lib.render_data_stream_projections('analyzed_table') }}
            {{- lib.render_time_dimension_projection('analyzed_table') }}
           FROM {{ lib.render_target_table() }} AS analyzed_table
           {{- lib.render_where_clause() -}}
           {{- lib.render_group_by() -}}, top_values
           {{- lib.render_order_by() -}}, ct
         ) top_col_values
    )
{% endmacro -%}

SELECT
    {{ top_value() }}
FROM {{- top_values_column() }}
WHERE rg <= {{parameters.limit}}
{{- lib.render_group_by() -}},
{{- lib.render_order_by() -}}

