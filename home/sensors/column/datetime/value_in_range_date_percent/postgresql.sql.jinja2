{% import '/dialects/postgresql.sql.jinja2' as lib with context -%}

{% macro render_date_range(lower_bound, upper_bound, include_lower_bound = true, include_upper_bound = true) %}
    {%- if include_lower_bound and include_upper_bound -%}
 {{ render_date_format_cast() }} >= {{ lib.make_text_constant(lower_bound) }} AND {{ render_date_format_cast() }} <= {{ lib.make_text_constant(upper_bound) }}
    {%- elif not include_lower_bound and include_upper_bound -%}
{{ render_date_format_cast() }} > {{ lib.make_text_constant(lower_bound) }} AND {{ render_date_format_cast() }} <= {{ lib.make_text_constant(upper_bound) }}
    {%- elif include_lower_bound and not include_upper_bound -%}
{{ render_date_format_cast() }} >= {{ lib.make_text_constant(lower_bound) }} AND {{ render_date_format_cast() }} < {{ lib.make_text_constant(upper_bound) }}
    {%- else -%}
{{ render_date_format_cast() }} > {{ lib.make_text_constant(lower_bound) }} AND {{ render_date_format_cast() }} < {{ lib.make_text_constant(upper_bound) }}
    {%- endif -%}
{% endmacro %}

{% macro render_date_format_cast()%}
    {%- if lib.target_column_data_type == 'date' -%}
    {{ render_target_column('analyzed_table') }}
    {%- elif lib.target_column_data_type == 'timestamp' or lib.target_column_data_type == 'timestamp with time zone' or lib.target_column_data_type == 'varchar'-%}
    CAST({{ lib.render_target_column('analyzed_table') }} AS DATE)
    {%- else -%}
    CAST({{ lib.render_target_column('analyzed_table') }} AS DATE)
    {%- endif -%}
{% endmacro %}

SELECT
    100.0 * SUM(
        CASE
            WHEN {{ render_date_range(parameters.min_value, parameters.max_value, parameters.include_min_value, parameters.include_max_value) }} THEN 1
            ELSE 0
        END
    ) / COUNT(*) AS actual_value
    {{- lib.render_data_stream_projections('analyzed_table') }}
    {{- lib.render_time_dimension_projection('analyzed_table') }}
FROM {{ lib.render_target_table() }} AS analyzed_table
{{- lib.render_where_clause() -}}
{{- lib.render_group_by() -}}
{{- lib.render_order_by() -}}