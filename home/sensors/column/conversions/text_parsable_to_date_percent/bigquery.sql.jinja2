{% import '/dialects/bigquery.sql.jinja2' as lib with context -%}

{% macro render_column_cast_to_string(analyzed_table_to_render) -%}
    {%- if (lib.target_column_data_type == 'STRING') -%}
        {{ lib.render_target_column(analyzed_table_to_render) }}
    {%- elif (lib.target_column_data_type == 'BIGNUMERIC') -%}
        SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'DECIMAL') -%}
            SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'BIGDECIMAL') -%}
            SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'FLOAT64') -%}
            SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'INT64') -%}
            SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'NUMERIC') -%}
            SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'INT') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'SMALLINT') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'INTEGER') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'BIGINT') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'TINYINT') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'BYTEINT') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'DATE') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'DATETIME') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'TIME') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'TIMESTAMP') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- elif (lib.target_column_data_type == 'BOOLEAN') -%}
                SAFE_CAST({{ lib.render_target_column(analyzed_table_to_render) }} AS STRING)
    {%- else -%}
        {{ lib.render_target_column(analyzed_table_to_render) }}
    {%- endif -%}
{% endmacro -%}

SELECT
    CASE
        WHEN COUNT({{ lib.render_target_column('analyzed_table') }}) = 0 THEN 100.0
        ELSE 100.0 * SUM(
            CASE
                WHEN SAFE_CAST({{render_column_cast_to_string('analyzed_table')}} AS DATE) IS NOT NULL
                    THEN 1
                ELSE 0
            END
        ) / COUNT({{ lib.render_target_column('analyzed_table') }})
    END AS actual_value
    {{- lib.render_data_grouping_projections('analyzed_table') }}
    {{- lib.render_time_dimension_projection('analyzed_table') }}
FROM {{ lib.render_target_table() }} AS analyzed_table
{{- lib.render_where_clause() -}}
{{- lib.render_group_by() -}}
{{- lib.render_order_by() -}}