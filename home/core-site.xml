<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
Copyright Â© 2021-Present DQOps, Documati sp. z o.o. (support@dqops.com)

This file is licensed under the Business Source License 1.1,
which can be found in the root directory of this repository.

Change Date: This file will be licensed under the Apache License, Version 2.0,
four (4) years from its last modification date.
-->

<!-- Put site-specific property overrides in this file. -->
<configuration>

  <property>
    <name>fs.defaultFS</name>
    <value>file:///</value>
    <description>
      The name of the default file system.
      A URI whose scheme and authority determine the FileSystem implementation.
      The uri's scheme determines the config property (fs.SCHEME.impl) naming the FileSystem implementation class.
      The uri's authority is used to determine the host, port, etc. for a filesystem.
    </description>
  </property>

  <property>
    <name>dfs.permissions.enabled</name>
    <value>false</value>
    <description>
      If yes use the permissions system as described here.
      If no, permission checking is turned off, but all other behavior is unchanged.
      Switching from one parameter value to the other does not change the mode, owner or group of files or directories.
      Regardless of whether permissions are on or off, chmod, chgrp, chown and setfacl always check permissions.
      These functions are only useful in the permissions context, and so there is no backwards compatibility issue.
      Furthermore, this allows administrators to reliably set owners and permissions in advance of turning on regular permissions checking.
    </description>
  </property>

</configuration>
