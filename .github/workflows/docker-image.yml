name: Docker Image CI for develop

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Build with Maven
        run: mvn package -DskipTests -Pbuild-with-jdk-11 -Prun-npm


  docker-build-on-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
    steps:
      - uses: actions/checkout@v3

      - uses: juliangruber/read-file-action@v1
        name: Read VERSION
        id: readversion
        with:
          path: ./VERSION
      - uses: docker-practice/actions-setup-docker@master

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build and Push Docker Image
        with:
          image: dqops/dqo
          tags: $(date +%s),${{ steps.readversion.outputs.content }},latest
          enableBuildKit: true
          multiPlatform: true
          platform: ${{ matrix.platform }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  docker-build-on-macosx:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/arm64
    steps:
      - uses: actions/checkout@v3

      - uses: juliangruber/read-file-action@v1
        name: Read VERSION
        id: readversion
        with:
          path: ./VERSION
      - uses: docker-practice/actions-setup-docker@master

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build and Push Docker Image
        with:
          image: dqops/dqo
          tags: $(date +%s),${{ steps.readversion.outputs.content }},latest
          enableBuildKit: true
          multiPlatform: true
          platform: ${{ matrix.platform }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
