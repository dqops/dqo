name: Build and publish the release to releases and PyPi

on:
  push:
    branches: [ "develop" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build with Maven
        run: mvn package -DskipTests -Pbuild-with-jdk-11 -Prun-npm

      - uses: juliangruber/read-file-action@v1
        name: Read VERSION
        id: readversion
        with:
          path: ./VERSION

      - name: Create GitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.readversion.outputs.content }}
          tag_name: ${{ steps.readversion.outputs.content }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload distribution binary file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./distribution/target/dqo-distribution-${{steps.readversion.outputs.content}}-bin.zip
          asset_name: dqo-distribution-${{steps.readversion.outputs.content}}-bin.zip
          asset_content_type: application/zip

      - name: Install python dependencies
        working-directory: ./distribution/python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build PyPi package
        working-directory: ./distribution/python
        run: |
          python -m build

      - name: Publish PyPi package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        working-directory: ./distribution/python
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
